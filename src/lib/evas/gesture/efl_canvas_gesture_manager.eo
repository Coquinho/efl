import efl_canvas_gesture_types;

class @beta Efl.Canvas.Gesture_Manager extends Efl.Object
{
   [[This class keeps track of active @Efl.Canvas.Gesture_Recognizer objects.
     For internal use only.
   
     This gesture class defines methods that register and unregister a recognizer and
     get a recognizer according to gesture event type.
   ]]
   c_prefix: efl_gesture_manager;
   methods {
      recognizer_register {
         [[Registers a new @Efl.Canvas.Gesture_Recognizer.]]
         params {
            @in recognizer: Efl.Canvas.Gesture_Recognizer; [[The gesture recognizer object.]]
         }
      }
      recognizer_unregister {
         [[Unregisters an existing @Efl.Canvas.Gesture_Recognizer.]]
         params {
            @in recognizer: Efl.Canvas.Gesture_Recognizer; [[The gesture recognizer object.]]
         }
      }
      @property config {
         [[This property holds configuration values for the recognizer.]]
         set {
         }
         get {
         }
         keys {
            name: string; [[Property name.]]
         }
         values {
            value: any_value_ref; [[Value of the property.]]
         }
      }
   }
   events {
      config,changed: string; [[Called when a config value has been changed for the manager object. Passed string is the name of the value.]]
   }
   implements {
      Efl.Object.constructor;
      Efl.Object.destructor;
   }
}
